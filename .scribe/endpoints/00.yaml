name: Expenses
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/expenses
    metadata:
      groupName: Expenses
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Get a list of all expenses

        Optional filters:
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      category:
        name: category
        description: 'Filter by category.'
        required: false
        example: 'food,health'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date_from:
        name: date_from
        description: 'date Filter start date.'
        required: false
        example: '2024-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date_to:
        name: date_to
        description: 'date Filter end date.'
        required: false
        example: '2024-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      category: 'food,health'
      date_from: '2024-01-01'
      date_to: '2024-12-31'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": "uuid",
              "title": "Pizza",
              "amount": "15.00",
              "category": "food",
              ...
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/expenses
    metadata:
      groupName: Expenses
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new expense'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: Pizza
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      amount:
        name: amount
        description: ''
        required: true
        example: 25.5
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      category:
        name: category
        description: 'One of: food,health,transport,entertainment,utilities,others'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      expense_date:
        name: expense_date
        description: ''
        required: true
        example: '2024-06-01'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      notes:
        name: notes
        description: optional
        required: false
        example: 'With colleagues'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      title: Pizza
      amount: 25.5
      category: architecto
      expense_date: '2024-06-01'
      notes: 'With colleagues'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": "uuid",
            "title": "Pizza",
            ...
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/expenses/{id}'
    metadata:
      groupName: Expenses
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific expense by ID'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The UUID of the expense.'
        required: true
        example: a18a8e55-7c20-4e93-a8d7-55b3b5b2a9d7
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: a18a8e55-7c20-4e93-a8d7-55b3b5b2a9d7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": "a18a8e55-7c20-4e93-a8d7-55b3b5b2a9d7",
            "title": "Pizza",
            "amount": "45.00",
            "category": "food",
            "expense_date": "2024-06-15",
            "notes": "Dinner with family",
            "created_at": "2024-06-15T20:10:00",
            "updated_at": "2024-06-15T20:10:00"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Expense not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/expenses/{id}'
    metadata:
      groupName: Expenses
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing expense'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The UUID of the expense.'
        required: true
        example: a18a8e55-7c20-4e93-a8d7-55b3b5b2a9d7
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: a18a8e55-7c20-4e93-a8d7-55b3b5b2a9d7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: optional
        required: false
        example: Burger
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      amount:
        name: amount
        description: optional
        required: false
        example: 30.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      category:
        name: category
        description: 'optional One of: food,transport,utilities'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      expense_date:
        name: expense_date
        description: optional
        required: false
        example: '2024-06-20'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      notes:
        name: notes
        description: optional
        required: false
        example: 'Changed location'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      title: Burger
      amount: 30.0
      category: architecto
      expense_date: '2024-06-20'
      notes: 'Changed location'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": "a18a8e55-7c20-4e93-a8d7-55b3b5b2a9d7",
            "title": "Burger",
            "amount": "30.00",
            ...
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Expense not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/expenses/{id}'
    metadata:
      groupName: Expenses
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an expense'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The UUID of the expense to delete.'
        required: true
        example: a18a8e55-7c20-4e93-a8d7-55b3b5b2a9d7
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: a18a8e55-7c20-4e93-a8d7-55b3b5b2a9d7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: 'No content'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Expense not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
